//====================================== Task 1 ================================================
function delay(ms) {
    return new Promise(function(resolve) {
        setTimeout(resolve, ms);
    });
}
  
// delay(3000).then(() => alert('выполнилось через 3 секунды'));

//====================================== Task 2 ================================================
let promise = new Promise(function(resolve, reject) {
    resolve(1);
  
    setTimeout(() => resolve(2), 1000); // Игнорируется
});
  
// promise.then(alert); // Выводит alert-ом "1". 

//====================================== Task 3 ================================================
/*сравните then и catch
Являются ли фрагменты кода ниже эквивалентными? Другими словами, ведут ли они себя одинаково во всех обстоятельствах, 
для всех переданных им обработчиков?*/

// Ответ - нет

promise.then(f1).catch(f2); //Здесь если ошибка произойдет ошибка в then, выполнится обработчик f2 (т.е. передается по цепочке)
​Против:
promise.then(f1, f2); // А здесь... Я не совсем понял... внутри then обрабатывается ошибка? Честно сложноватая тема для меня пока